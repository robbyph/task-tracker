{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoTypes","PropTypes","string","func","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0f91a8e.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <button \r\n        onClick = {onClick}\r\n        style={{backgroundColor: color}}\r\n        className='btn'>{text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.protoTypes={\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    \r\n    return ( \r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red': 'green'} text={showAdd ? 'Close': 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes ={\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer'}} onClick={() => onDelete(task.id)}/> </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n        {tasks.map((task) => (\r\n            <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n        ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {useState} from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const[text, setText] = useState('')\r\n    const[day, setDay] = useState('')\r\n    const[reminder, setReminder] = useState(false)\r\n\r\nconst onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if(!text) {\r\n        alert('Please add a task')\r\n        return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n}\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}> \r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day + Time</label>\r\n                <input type=\"text\" placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder?</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false) \n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Buy phone',\n        day: 'Feb 5th at 2:30',\n        reminder: false,\n    },\n    {\n        id: 2,\n        text: 'Buy bananas',\n        day: 'Feb 5th at 2:30',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Clean car',\n        day: 'Feb 5th at 2:30',\n        reminder: false,\n    },\n])\n\n//Add Task\n\nconst addTask = (task) => {\n  const id= Math.floor(Math.random() * 10000) + 1\n\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle reminder\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder} : task))\n}\n  \n  return (\n    <div className=\"Container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}